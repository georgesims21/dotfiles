# ----- Display ----- #
# Run polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Set keyboard delay rate
exec --no-startup-id xset r rate 200 25

# Update screen settings on refresh
exec --no-startup-id switch_display.sh

#exec_always --no-startup-id ~/.config/polybar/polybar.sh &

# ----- Mod key ----- #

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod1

# ----- Autostart ----- #

# autohide mouse cursor
exec --no-startup-id unclutter -idle 1 -jitter 2

# start insync client
exec --no-startup-id insync start

# run tmux on first workspace on login,
# attatch to most recently closed session if exists
# exec --no-startup-id alacritty -e "tmux a || tmux new"

# connect to VPN
exec --no-startup-id nordvpn connect

# start bluetooth client
exec_always --no-startup-id blueman-applet

# For battery status icon
#exec --no-startup-id cbatticon

exec_always --no-startup-id ff-theme-util
exec_always --no-startup-id fix_xcursor
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id nm-applet
exec --no-startup-id xfce4-power-manager

# ----- Basics ----- #

# kill focused window
bindsym $mod+q kill

# hide/unhide i3status bar
bindsym $mod+m bar mode toggle

# Focus window on mouse movement
focus_follows_mouse no

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# split orientation
bindsym $mod+t split toggle

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float normal

# Hide borders
hide_edge_borders none

# set font
font pango:inconsolata 18 

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# ----- Main program shortcuts ----- #

bindsym $mod+Return exec --no-startup-id alacritty
bindsym $mod+Shift+Return exec --no-startup-id alacritty -e tmux
bindsym $mod+d exec --no-startup-id rofi -show run
bindsym $mod+w exec --no-startup-id firefox
bindsym $mod+r exec --no-startup-id alacritty -e ranger
bindsym $mod+o exec --no-startup-id zathura
bindsym $mod+e exec --no-startup-id emacs
bindsym $mod+c exec --no-startup-id clion
#bindsym $mod+u exec --no-startup-id whatsapp-nativefier-dark
#bindsym $mod+y exec --no-startup-id telegram-desktop
#bindsym $mod+p exec --no-startup-id deepin-screenshot
## Multi-screen screenshots with scrot
bindsym --release Print exec --no-startup-id scrot 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # All screens
## OSX-like area selection screenshots
bindsym --release Shift+Print exec --no-startup-id scrot -s 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # Area selection


# ----- Window/container options ----- #

set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:" 
set $ws4 "4:"
set $ws5 "5:"
set $ws6 "6:"
set $ws7 7
set $ws8 "8:"
set $ws9 "9:"
set $ws0 "10:"

workspace $ws1 output eDP-1
workspace $ws2 output DP-1
workspace $ws3 output DP-1
workspace $ws4 output DP-1
workspace $ws5 output DP-1
workspace $ws6 output DP-1
workspace $ws7 output DP-1
workspace $ws8 output DP-1
workspace $ws9 output DP-1
workspace $ws0 output DP-1

#set $ws1 1
#set $ws2 2
#set $ws3 3 
#set $ws4 4
#set $ws5 5
#set $ws6 6
#set $ws7 7
#set $ws8 8
#set $ws9 9
#set $ws0 10
# ----- Open on specific workspace ----- #

assign [class="jetbrains-clion"] $ws2
assign [class="firefox"] $ws3
assign [class="emacs"] $ws4
assign [class="VirtualBox Manager"] $ws5
assign [class="VirtualBox Machine"] $ws5

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9
bindsym $mod+Ctrl+0 move container to workspace $ws0

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0; workspace $ws0

# Resize currently focused window
bindsym $mod+Shift+Y resize shrink width 5 px or 5 ppt
bindsym $mod+Shift+O resize grow width 5 px or 5 ppt
bindsym $mod+Shift+I resize shrink height 5 px or 5 ppt
bindsym $mod+Shift+U resize grow height 5 px or 5 ppt

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right


#----- i3-gaps ----- #

# Set inner/outer gaps
#gaps inner 5
#gaps outer 2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# ----- i3-bar ----- #

# Start i3bar to display a workspace bar (plus the system information i3status if available)
#bar {
#    hidden_state hide
    #i3bar_command i3bar
	#font pango:Inconsolata, FontAwesome 16
	#strip_workspace_numbers yes
	#position top
	#status_command i3status

    #colors {
        #separator #666666
        #background #222222
        #statusline #dddddd
        #focused_workspace #0088CC #0088CC #ffffff
        #active_workspace #333333 #333333 #ffffff
        #inactive_workspace #333333 #333333 #888888
        #urgent_workspace #2f343a #900000 #ffffff
    #}
#}
# please set your primary output first. Example: 'xrandr --output eDP1 --primary'
#	tray_output primary
#	tray_output eDP1

	#bindsym button4 nop
	#bindsym button5 nop
#   font xft:URWGothic-Book 11
	

#    colors {
#        background #222D31
#        statusline #F9FAF9
#        separator  #FFFFFF
        #separator  #454947

#                      border  backgr. text
#        focused_workspace  #F9FAF9 #16a085 #292F34
#        active_workspace   #595B5B #353836 #FDF6E3
#        inactive_workspace #595B5B #222D31 #EEE8D5
#        binding_mode       #16a085 #2C2C2C #F9FAF9
#        urgent_workspace   #16a085 #FDF6E3 #E5201D
#    }

# ----- Colours/themes ----- #

# Color palette used for the terminal ( ~/.Xresources file )
# Colors are gathered based on the documentation:
# https://i3wm.org/docs/userguide.html#xresources
# Change the variable name at the place you want to match the color
# of your terminal like this:
# [example]
# If you want your bar to have the same background color as your 
# terminal background change the line 362 from:
# background #14191D
# to:
# background $term_background
# Same logic applied to everything else.
set_from_resource $term_background background
set_from_resource $term_foreground foreground
set_from_resource $term_color0     color0
set_from_resource $term_color1     color1
set_from_resource $term_color2     color2
set_from_resource $term_color3     color3
set_from_resource $term_color4     color4
set_from_resource $term_color5     color5
set_from_resource $term_color6     color6
set_from_resource $term_color7     color7
set_from_resource $term_color8     color8
set_from_resource $term_color9     color9
set_from_resource $term_color10    color10
set_from_resource $term_color11    color11
set_from_resource $term_color12    color12
set_from_resource $term_color13    color13
set_from_resource $term_color14    color14
set_from_resource $term_color15    color15

# Theme colors
# class                   border  backgr. text    indic.   child_border
  client.focused          #00e600 #00e600 #80FFF9 #FDF6E3
  client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
  client.unfocused        #2F3D44 #2F3D44 #1ABC9C #454948
  client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
  client.placeholder      #000000 #0c0c0c #ffffff #000000 

  client.background       #2B2C2B

# ----- Sound ----- # (DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later!)

exec --no-startup-id volumeicon
bindsym $mod+Ctrl+m exec --no-startup-id terminal -e 'alsamixer'

# Set keyboard repeat rate and delay
#exec --no-startup-id termite -e xset r rate 250 30

#exec --no-startup-id pulseaudio
#exec --no-startup-id pa-applet
#bindsym $mod+Ctrl+m exec pavucontrol

bindsym XF86AudioPlay exec --no-startup-id playerctl play
bindsym XF86AudioPause exec --no-startup-id playerctl pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# ----- Brightness ----- # 

# Screen brightness controls
# bindsym XF86MonBrightnessUp exec "xbacklight -inc 10; notify-send 'brightness up'"
# bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

# ----- Examples ----- #

####### Creating new mode #########

# Use as example when wanting to make a new 'mode'
# bindsym $mod+r mode "resize" <-- to enter mode below
# mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
#       bindsym Right resize grow width 10 px or 10 ppt

#       exit resize mode: Enter or Escape
#       bindsym Return mode "default"
#       bindsym Escape mode "default"
# }

#######  Set shut down, restart and locking features #######  

bindsym $mod+Shift+x mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3lock, mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    #exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+d mode "$mode_screen"
set $mode_screen (e)xternal, (i)nternal, (b)oth
mode "$mode_screen" {
    bindsym e exec no-startup-id alacritty -e control_display.sh e
    bindsym i exec no-startup-id alacritty -e control_display.sh i
    bindsym b exec no-startup-id alacritty -e control_display.sh b

    #exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#######################

# Open applications on specific workspaces
#assign [class="Firefox"] $ws3

# Open specific applications in floating mode
# for_window [title="alsamixer"] floating enable border pixel 1

#######################

exec_always --no-startup-id feh --bg-scale /home/george/Pictures/mountain-wallpaper.jpg
